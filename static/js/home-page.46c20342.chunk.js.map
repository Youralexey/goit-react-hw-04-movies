{"version":3,"sources":["services/movies-api.js","components/MoviesList/MovieList.styled.jsx","components/MoviesList/MovieList.jsx","components/PageHeading/PageHeading.styled.jsx","components/PageHeading/PageHeadind.jsx","views/Home.js"],"names":["AUTH_TOKEN","featchPopularMovies","a","axios","get","response","data","results","alert","message","featchMovieInSearch","movieName","featchMovieInfo","movieId","featchMovieCast","cast","featchMovieRewiews","defaults","baseURL","headers","common","Authorization","CurrentMovieList","styled","ul","MovieItem","li","MovieImage","img","MovieTitle","h2","MovieList","movies","location","useLocation","console","log","map","id","poster_path","title","to","pathname","state","from","label","src","alt","protoTypes","PropTypes","arrayOf","shape","string","isRequired","CurrentPageHeading","h1","PageHeading","children","Home","useState","setMovies","useEffect","api","then"],"mappings":"iWAEMA,EACJ,6NAIK,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,+EAEoBC,IAAMC,IAAN,sCACUJ,IAH9B,cAEGK,EAFH,yBAMIA,EAASC,KAAKC,SANlB,gCAQHC,MAAM,KAAMC,SART,0D,sBAYA,SAAeC,EAAtB,kC,4CAAO,WAAmCC,GAAnC,eAAAT,EAAA,+EAEoBC,IAAMC,IAAN,gCACIJ,EADJ,kBACwBW,IAH5C,cAEGN,EAFH,yBAMIA,EAASC,KAAKC,SANlB,gCAQHC,MAAM,KAAMC,SART,0D,sBAYA,SAAeG,EAAtB,kC,4CAAO,WAA+BC,GAA/B,eAAAX,EAAA,+EAEoBC,IAAMC,IAAN,iBAAoBS,EAApB,oBAAuCb,IAF3D,cAEGK,EAFH,yBAIIA,EAASC,MAJb,gCAMHE,MAAM,KAAMC,SANT,0D,sBAUA,SAAeK,EAAtB,kC,4CAAO,WAA+BD,GAA/B,eAAAX,EAAA,+EAEoBC,IAAMC,IAAN,iBACXS,EADW,4BACgBb,IAHpC,cAEGK,EAFH,yBAMIA,EAASC,KAAKS,MANlB,gCAQHP,MAAM,KAAMC,SART,0D,sBAYA,SAAeO,EAAtB,kC,4CAAO,WAAkCH,GAAlC,eAAAX,EAAA,+EAEoBC,IAAMC,IAAN,iBACXS,EADW,4BACgBb,IAHpC,cAEGK,EAFH,yBAMIA,EAASC,KAAKC,SANlB,gCAQHC,MAAM,KAAMC,SART,0D,sBAjDPN,IAAMc,SAASC,QAAU,+BACzBf,IAAMc,SAASE,QAAQC,OAAOC,cAAgBrB,G,8GCHjCsB,EAAmBC,IAAOC,GAAV,qtBA4BhBC,EAAYF,IAAOG,GAAV,sTAgBTC,EAAaJ,IAAOK,IAAV,mKASVC,EAAaN,IAAOO,GAAV,uK,qBC7CR,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,EAAWC,cAIjB,OAFAC,QAAQC,IAAR,WAAwBH,GAGtB,cAACX,EAAD,UACGU,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,cAACf,EAAD,UACE,eAAC,IAAD,CACEgB,GAAI,CACFC,SAAS,UAAD,OAAYJ,GACpBK,MAAO,CACLC,KAAM,CACJX,WACAY,MAAO,2BANf,UAYE,cAAClB,EAAD,CACEmB,IApBQ,kCAoBWP,EACnBQ,IAAKP,IAEP,cAACX,EAAD,UAAaW,QAjBDF,QAyBxBP,EAAUiB,WAAa,CACrBhB,OAAQiB,IAAUC,QAChBD,IAAUE,MAAM,CACdb,GAAIW,IAAUG,OAAOC,WACrBd,YAAaU,IAAUG,OACvBZ,MAAOS,IAAUG,OAAOC,gB,2EC9CjBC,E,MAAqB/B,EAAOgC,GAAV,4B,OCAhB,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,OAAO,cAACH,EAAD,UAAqBG,I,YCiBfC,UAfF,WACX,MAA4BC,mBAAS,MAArC,mBAAO3B,EAAP,KAAe4B,EAAf,KAMA,OAJAC,qBAAU,WACRC,MAA0BC,MAAK,SAAAzD,GAAI,OAAIsD,EAAUtD,QAChD,IAGD,qCACE,cAACkD,EAAD,6BACCxB,GAAU,cAACD,EAAA,EAAD,CAAWC,OAAQA","file":"static/js/home-page.46c20342.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst AUTH_TOKEN =\n  \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0ZmJjZmE2MzcxZjJiNGM1MWE4ZGJiNjc0ZGJhMmJkMyIsInN1YiI6IjYwYmNiYzNmZWE4NGM3MDAyYWU3YTE0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.anozZCItdqcbHyQtoH8Fm8ne3QlJGCSzSiJGIz6YtsQ\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\naxios.defaults.headers.common.Authorization = AUTH_TOKEN;\n\nexport async function featchPopularMovies() {\n  try {\n    const response = await axios.get(\n      `/trending/movie/day?api_key=${AUTH_TOKEN}`\n    );\n    // console.log('result :>> ', response.data.results);\n    return response.data.results;\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nexport async function featchMovieInSearch(movieName) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${AUTH_TOKEN}&query=${movieName}`\n    );\n    //console.log('result :>> ', response.data.results);\n    return response.data.results;\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nexport async function featchMovieInfo(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${AUTH_TOKEN}`);\n    // console.log('response :>> ', response.data);\n    return response.data;\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nexport async function featchMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${AUTH_TOKEN}`\n    );\n    // console.log('cast :>> ', response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nexport async function featchMovieRewiews(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${AUTH_TOKEN}`\n    );\n    // console.log('Rewiews :>> ', response.data.results);\n    return response.data.results;\n  } catch (error) {\n    alert(error.message);\n  }\n}\n","import styled from '@emotion/styled';\r\n\r\nexport const CurrentMovieList = styled.ul`\r\n    justify-content: center;\r\n    \r\n  @media screen and (max-width: 767px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: 293px 293px;\r\n    grid-gap: 30px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    grid-template-columns: 274px 274px 274px;\r\n  }\r\n  // @media screen and (max-width: 1024px) {  \r\n  //  display: grid;\r\n  // //min-width: calc(100vh-60px)\r\n  // grid-template-columns: repeat(auto-fill, minmax(274px, 1fr));\r\n  // grid-row-gap: 20px;\r\n  // margin-top: 0;\r\n  // margin-bottom: 0;\r\n  // padding: 0;\r\n  // margin-left: auto;\r\n  // margin-right: auto;}\r\n`;\r\n\r\nexport const MovieItem = styled.li`\r\n  min-height: 460px;\r\n  width: 280px;\r\n  @media screen and (max-width: 767px) {\r\n    &:not(:last-child){\r\n       margin-bottom: 20px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 274px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n     width: 274px;\r\n  }\r\n `;\r\n\r\nexport const MovieImage = styled.img`\r\nheight: 398px;\r\nwidth: 274px;\r\nborder-radius: 5px ;\r\n  &:hover,\r\n  &:focus{\r\n    box-shadow: 0px 8px 43px rgba(255, 107, 1, 0.6);;\r\n  }`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line - height: 14px;\r\n  margin-bottom: 6px;\r\n  margin-top: 10px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport {\r\n  CurrentMovieList,\r\n  MovieItem,\r\n  MovieImage,\r\n  MovieTitle,\r\n} from \"./MovieList.styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function MovieList({ movies }) {\r\n  const location = useLocation();\r\n  const imgBasePath = \"https://image.tmdb.org/t/p/w500\";\r\n  console.log(`location`, location);\r\n\r\n  return (\r\n    <CurrentMovieList>\r\n      {movies.map(({ id, poster_path, title }) => (\r\n        <MovieItem key={id}>\r\n          <Link\r\n            to={{\r\n              pathname: `movies/${id}`,\r\n              state: {\r\n                from: {\r\n                  location,\r\n                  label: \"Go back to all movies\",\r\n                },\r\n                //  params: `movies/?query=${query}`\r\n              },\r\n            }}\r\n          >\r\n            <MovieImage\r\n              src={imgBasePath + poster_path}\r\n              alt={title}\r\n            ></MovieImage>\r\n            <MovieTitle>{title}</MovieTitle>\r\n          </Link>\r\n        </MovieItem>\r\n      ))}\r\n    </CurrentMovieList>\r\n  );\r\n}\r\n\r\nMovieList.protoTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      poster_path: PropTypes.string,\r\n      title: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const CurrentPageHeading = styled.h1`\r\n`;","import { CurrentPageHeading } from \"./PageHeading.styled\";\r\n\r\nexport default function PageHeading({ children }) {\r\n  return <CurrentPageHeading>{children}</CurrentPageHeading>;\r\n}\r\n","import { useState, useEffect } from 'react';\nimport * as api from '../services/movies-api';\nimport PageHeading from '../components/PageHeading/PageHeadind.jsx';\nimport MovieList from '../components/MoviesList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    api.featchPopularMovies().then(data => setMovies(data));\n  }, []);\n\n  return (\n    <>\n      <PageHeading>Trending today</PageHeading>\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;"],"sourceRoot":""}